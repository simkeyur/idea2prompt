    :root {
      --i2p-accent: #0d6efd;
    }
    html, body {
      height: 100%;
      margin: 0;
      display: flex;
      flex-direction: column;
    }
    header {
      background-color: #000;
      color: #fff;
      padding: 0.75rem 1rem;
      display: flex;
      justify-content: space-between;
      align-items: center;
    }
    main {
      flex: 1;
      display: flex;
      height: 100%;
      overflow: hidden;
    }
    .input-panel {
      width: 35%;
      min-width: 250px;
      max-width: 80%;
      resize: horizontal;
      overflow: auto;
      padding: 1rem;
      display: flex;
      flex-direction: column;
      border-right: 1px solid var(--bs-border-color);
      box-sizing: border-box;
    }
    .output-panel {
      flex-shrink: 0;
      width: calc(100% - 35%);
      overflow: hidden;
      padding: 1rem;
      display: flex;
      flex-direction: column;
      box-sizing: border-box;
    }
    /* Mobile layout fix: stack panels and let output fill remaining height */
    @media (max-width: 768px) {
      /* Stack panels */
      main {
        flex-direction: column;
        height: 100vh;        /* ensure we take full viewport height */
        overflow: hidden;
      }
    
      /* Input panel should size to its content (incl. the pinned button at bottom) */
      .input-panel {
        flex: 0 0 auto;       /* donâ€™t grow or shrink */
        width: 100% !important;
        max-width: 100%;
        resize: none;
        border-right: none;
        border-bottom: 1px solid var(--bs-border-color);
        display: flex;
        flex-direction: column;
      }
    
      /* Output panel fills the rest of the height */
      .output-panel {
        flex: 1 1 auto;       /* grow to fill leftover space */
        min-height: 0;        /* allow its children to scroll */
        display: flex;
        flex-direction: column;
        overflow: hidden;
        padding: 1rem;
      }
    
      /* The refine button stays in input-panel, above the split */
      #refineBtn {
        margin-top: auto;
      }
    
      /* Output box scrolls inside output-panel */
      #outputBox {
        flex: 1 1 auto;       /* fill output-panel vertically */
        min-height: 0;        /* enable overflow */
        overflow-y: auto;
        overflow-x: hidden;
        white-space: pre-wrap;
        word-break: break-word;
      }
    }



    .spin {
      animation: spin 1s linear infinite;
    }
    @keyframes spin {
      from { transform: rotate(0deg); }
      to { transform: rotate(360deg); }
    }
    #modelSettings label {
      margin-top: 0.5rem;
    }
    #pinnedList {
      max-height: 150px;
      overflow-y: auto;
    }
    .toast-container {
      position: fixed;
      bottom: 1rem;
      right: 1rem;
      z-index: 1055;
    }

    #pinnedList .badge {
    display: inline-flex;
    align-items: center;
    margin: 0.25rem;
    padding-right: 0.5rem;     /* room for close icon */
    cursor: pointer;           /* entire badge is clickable */
    }
    #pinnedList .badge .btn-close {
    --bs-btn-padding-x: 0.25rem;
    --bs-btn-padding-y: 0;
    font-size: 0.75rem;
    opacity: 0.75;
    margin-left: 0.5rem;
    }
    #pinnedList .badge .btn-close:hover {
    opacity: 1;
    }
